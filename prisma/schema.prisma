// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())
  email String @unique
  name String
  password String

  //relationships
  profile Profile[]
  authoredConversations Conversation[] @relation("author")
  mmessage Message[]
  activeConversations Conversation[] @relation("participants")
}

model Conversation {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())
  lastMessageAt DateTime? 
  title String?

  //relationships
  author User @relation("author", fields: [authorId], references: [id], onDelete: Cascade)
  authorId Int
  participants User[] @relation("participants")
  messages Message[]


}

model Message {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())
  body String

  //relationships
  author User @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId Int

  conversation Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)
  conversationId Int
}

model Profile {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())

  //Profile items
  bio String?
  avatarUrl String?

  //relationships
  owner User @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  ownerId Int @unique

  
}